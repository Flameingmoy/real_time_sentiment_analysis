services:
  # PostgreSQL Database 1 - Raw Data
  postgres-raw:
    image: postgres:15
    container_name: rtsa-postgres-raw
    environment:
      POSTGRES_DB: rtsa_raw
      POSTGRES_USER: rtsa_user
      POSTGRES_PASSWORD: rtsa_password
    ports:
      - "5435:5432"
    volumes:
      - postgres_raw_data:/var/lib/postgresql/data
      - ./sql/init-raw-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rtsa_user -d rtsa_raw"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database 2 - Analytics
  postgres-analytics:
    image: postgres:15
    container_name: rtsa-postgres-analytics
    environment:
      POSTGRES_DB: rtsa_analytics
      POSTGRES_USER: rtsa_user
      POSTGRES_PASSWORD: rtsa_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_analytics_data:/var/lib/postgresql/data
      - ./sql/init-analytics-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rtsa_user -d rtsa_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database 3 - Logging
  postgres-logging:
    image: postgres:15
    container_name: rtsa-postgres-logging
    environment:
      POSTGRES_DB: rtsa_logging
      POSTGRES_USER: rtsa_user
      POSTGRES_PASSWORD: rtsa_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_logging_data:/var/lib/postgresql/data
      - ./sql/init-logging-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rtsa_user -d rtsa_logging"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: rtsa-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: rtsa-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis with RedisSearch
  redis:
    image: redis/redis-stack:7.2.0-v6
    container_name: rtsa-redis
    ports:
      - "6380:6379"
      - "8002:8001"  # RedisInsight
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana
  grafana:
    image: grafana/grafana:10.2.0
    container_name: rtsa-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - postgres-analytics
      - postgres-logging
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_raw_data:
  postgres_analytics_data:
  postgres_logging_data:
  redis_data:
  grafana_data: